CREATE OR REPLACE FUNCTION "public"."calculate_total_experience_years"() RETURNS numeric
    LANGUAGE "sql"
    AS $$
  select coalesce(
    round(
      sum(
        extract(epoch from (
          coalesce(worked_until, current_date) - worked_from
        )) / (60 * 60 * 24 * 365.25)
      ), 
    2), 
  0) as total_years
  from work_experiences;
$$;


ALTER FUNCTION "public"."calculate_total_experience_years"() OWNER TO "postgres";

SET default_tablespace = '';
SET default_table_access_method = "heap";


CREATE TABLE IF NOT EXISTS "public"."links" (
    "id" bigint NOT NULL,
    "label" "text",
    "path" "text"
);


ALTER TABLE "public"."links" OWNER TO "postgres";


ALTER TABLE "public"."links" ALTER COLUMN "id" ADD GENERATED BY DEFAULT AS IDENTITY (
    SEQUENCE NAME "public"."links_id_seq"
    START WITH 1
    INCREMENT BY 1
    NO MINVALUE
    NO MAXVALUE
    CACHE 1
);



CREATE TABLE IF NOT EXISTS "public"."stacks" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "name" character varying,
    "description" "text",
    "url" "text",
    "icon" character varying,
    "colored_icon" "text"
);


ALTER TABLE "public"."stacks" OWNER TO "postgres";


CREATE TABLE IF NOT EXISTS "public"."work_experiences" (
    "id" "uuid" DEFAULT "gen_random_uuid"() NOT NULL,
    "title" "text",
    "company" "text",
    "worked_from" timestamp with time zone,
    "worked_until" timestamp with time zone,
    "url" "text",
    "description" "text"
);


ALTER TABLE "public"."work_experiences" OWNER TO "postgres";


ALTER TABLE ONLY "public"."links"
    ADD CONSTRAINT "links_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."stacks"
    ADD CONSTRAINT "stacks_pkey" PRIMARY KEY ("id");



ALTER TABLE ONLY "public"."work_experiences"
    ADD CONSTRAINT "work_experiences_pkey" PRIMARY KEY ("id");



CREATE POLICY "Enable read access for all users" ON "public"."links" FOR SELECT USING (true);
CREATE POLICY "Enable read access for all users" ON "public"."work_experiences" FOR SELECT USING (true);



ALTER TABLE "public"."links" ENABLE ROW LEVEL SECURITY;
CREATE POLICY "public can read stacks" ON "public"."stacks" FOR SELECT TO "anon" USING (true);

ALTER TABLE "public"."stacks" ENABLE ROW LEVEL SECURITY;
ALTER TABLE "public"."work_experiences" ENABLE ROW LEVEL SECURITY;

ALTER PUBLICATION "supabase_realtime" OWNER TO "postgres";

GRANT USAGE ON SCHEMA "public" TO "postgres";
GRANT USAGE ON SCHEMA "public" TO "anon";
GRANT USAGE ON SCHEMA "public" TO "authenticated";
GRANT USAGE ON SCHEMA "public" TO "service_role";


GRANT ALL ON FUNCTION "public"."calculate_total_experience_years"() TO "anon";
GRANT ALL ON FUNCTION "public"."calculate_total_experience_years"() TO "authenticated";
GRANT ALL ON FUNCTION "public"."calculate_total_experience_years"() TO "service_role";

GRANT ALL ON TABLE "public"."links" TO "anon";
GRANT ALL ON TABLE "public"."links" TO "authenticated";
GRANT ALL ON TABLE "public"."links" TO "service_role";

GRANT ALL ON SEQUENCE "public"."links_id_seq" TO "anon";
GRANT ALL ON SEQUENCE "public"."links_id_seq" TO "authenticated";
GRANT ALL ON SEQUENCE "public"."links_id_seq" TO "service_role";

GRANT ALL ON TABLE "public"."stacks" TO "anon";
GRANT ALL ON TABLE "public"."stacks" TO "authenticated";
GRANT ALL ON TABLE "public"."stacks" TO "service_role";

GRANT ALL ON TABLE "public"."work_experiences" TO "anon";
GRANT ALL ON TABLE "public"."work_experiences" TO "authenticated";
GRANT ALL ON TABLE "public"."work_experiences" TO "service_role";

RESET ALL;
